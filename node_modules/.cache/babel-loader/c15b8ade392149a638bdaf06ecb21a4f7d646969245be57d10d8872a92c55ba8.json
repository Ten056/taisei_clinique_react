{"ast":null,"code":"var _jsxFileName = \"/Users/ten/_BOX/react-typescript-weather-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport Title from './components/Title';\nimport Form from './components/Form';\nimport Results from './components/Results';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [results, setResults] = useState({\n    country: \"\",\n    cityName: \"\",\n    temperature: \"\",\n    conditionText: \"\",\n    icon: \"\"\n  });\n  const getWeather = e => {\n    e.preventDefault();\n    fetch(`https://api.weatherapi.com/v1/current.json?key=c8ba5db6450e4486ad2132014230307&q=${city}&aqi=no`).then(res => res.json()).then(data => {\n      setResults({\n        country: data.location.country,\n        cityName: data.location.name,\n        temperature: data.current.temp_c,\n        conditionText: data.current.condition.text,\n        icon: data.current.condition.icon\n      });\n      setCity(\"\");\n    }).catch(err => alert(\"エラーが発生しました。ページをリロードして再度トライしてください。\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        setCity: setCity,\n        getWeather: getWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8szj35cfgNE/gjAy1ep18fopXso=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Title","Form","Results","jsxDEV","_jsxDEV","App","_s","city","setCity","results","setResults","country","cityName","temperature","conditionText","icon","getWeather","e","preventDefault","fetch","then","res","json","data","location","name","current","temp_c","condition","text","catch","err","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ten/_BOX/react-typescript-weather-app/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport { useState } from 'react';\nimport Title from './components/Title';\nimport Form from './components/Form';\nimport Results from './components/Results';\nimport './App.css';\n\ntype ResultsStateType = {\n  country: string;\n  cityName: string;\n  temperature: string;\n  conditionText: string;\n  icon: string;\n}\n\nfunction App() {\n  const [city, setCity] = useState<string>(\"\");\n  const [results, setResults] = useState<ResultsStateType>({\n    country: \"\",\n    cityName: \"\",\n    temperature: \"\",\n    conditionText: \"\",\n    icon: \"\"\n  });\n  const getWeather = (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      fetch(`https://api.weatherapi.com/v1/current.json?key=c8ba5db6450e4486ad2132014230307&q=${city}&aqi=no`)\n          .then(res => res.json())\n          .then(data => {\n            setResults({\n              country: data.location.country,\n              cityName: data.location.name,\n              temperature: data.current.temp_c,\n              conditionText: data.current.condition.text,\n              icon: data.current.condition.icon\n            })\n            setCity(\"\");\n          })\n          .catch(err => alert(\"エラーが発生しました。ページをリロードして再度トライしてください。\"))\n  }\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <Title />\n        <Form setCity={setCity} getWeather={getWeather} />\n        <Results results={results}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAmB;IACvDY,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,EAAE;IACjBC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAMC,UAAU,GAAIC,CAAmC,IAAK;IACxDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAE,oFAAmFZ,IAAK,SAAQ,CAAC,CACnGa,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZb,UAAU,CAAC;QACTC,OAAO,EAAEY,IAAI,CAACC,QAAQ,CAACb,OAAO;QAC9BC,QAAQ,EAAEW,IAAI,CAACC,QAAQ,CAACC,IAAI;QAC5BZ,WAAW,EAAEU,IAAI,CAACG,OAAO,CAACC,MAAM;QAChCb,aAAa,EAAES,IAAI,CAACG,OAAO,CAACE,SAAS,CAACC,IAAI;QAC1Cd,IAAI,EAAEQ,IAAI,CAACG,OAAO,CAACE,SAAS,CAACb;MAC/B,CAAC,CAAC;MACFP,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,CAAC,CACDsB,KAAK,CAACC,GAAG,IAAIC,KAAK,CAAC,mCAAmC,CAAC,CAAC;EACjE,CAAC;EACD,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtB9B,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB9B,OAAA,CAACJ,KAAK;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTlC,OAAA,CAACH,IAAI;QAACO,OAAO,EAAEA,OAAQ;QAACQ,UAAU,EAAEA;MAAW;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDlC,OAAA,CAACF,OAAO;QAACO,OAAO,EAAEA;MAAQ;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChC,EAAA,CAlCQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}