{"ast":null,"code":"var _jsxFileName = \"/Users/ten/_BOX/react-typescript-weather-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport CatchPhrase from './components/CatchPhrase';\nimport Result from './components/Result';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [city, setCity] = useState<string>(\"\");\n  const [results, setResults] = useState({\n    country: \"\",\n    cityName: \"\",\n    temperature: \"\",\n    conditionText: \"\",\n    icon: \"\"\n  });\n  // const getWeather = (e: React.FormEvent<HTMLFormElement>) => {\n  //     e.preventDefault();\n  //     fetch(`https://api.weatherapi.com/v1/current.json?key=c8ba5db6450e4486ad2132014230307&q=${city}&aqi=no`)\n  //         .then(res => res.json())\n  //         .then(data => {\n  //           setResults({\n  //             country: data.location.country,\n  //             cityName: data.location.name,\n  //             temperature: data.current.temp_c,\n  //             conditionText: data.current.condition.text,\n  //             icon: data.current.condition.icon\n  //           })\n  //         })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: [/*#__PURE__*/_jsxDEV(CatchPhrase, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OpfwmQkV5SOMccyJlpxx0hhMD8c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["CatchPhrase","Result","useState","jsxDEV","_jsxDEV","App","_s","results","setResults","country","cityName","temperature","conditionText","icon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ten/_BOX/react-typescript-weather-app/src/App.tsx"],"sourcesContent":["import CatchPhrase from './components/CatchPhrase';\nimport Form from './components/Form';\nimport Result from './components/Result';\nimport { useState } from 'react';\n\ntype ResultsStateType = {\n  country: string;\n  cityName: string;\n  temperature: string;\n  conditionText: string;\n  icon: string;\n}\n\n\nfunction App() {  \n  // const [city, setCity] = useState<string>(\"\");\n  const [results, setResults] = useState<ResultsStateType>({\n    country: \"\",\n    cityName: \"\",\n    temperature: \"\",\n    conditionText: \"\",\n    icon: \"\"\n  })\n  // const getWeather = (e: React.FormEvent<HTMLFormElement>) => {\n  //     e.preventDefault();\n  //     fetch(`https://api.weatherapi.com/v1/current.json?key=c8ba5db6450e4486ad2132014230307&q=${city}&aqi=no`)\n  //         .then(res => res.json())\n  //         .then(data => {\n  //           setResults({\n  //             country: data.location.country,\n  //             cityName: data.location.name,\n  //             temperature: data.current.temp_c,\n  //             conditionText: data.current.condition.text,\n  //             icon: data.current.condition.icon\n  //           })\n  //         })\n  // }\n  \n  return(\n    <div className='test'>\n      <CatchPhrase />\n      {/* <Form setCity={setCity} getWeather={getWeather} /> */}\n      <Result results={results} />\n    </div> \n )\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,0BAA0B;AAElD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAmB;IACvDO,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,EAAE;IACjBC,IAAI,EAAE;EACR,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACET,OAAA;IAAKU,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBX,OAAA,CAACJ,WAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEff,OAAA,CAACH,MAAM;MAACM,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAACb,EAAA,CA/BQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}